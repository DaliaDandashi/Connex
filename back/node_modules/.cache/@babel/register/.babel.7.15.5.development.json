{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back\",\"filename\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back",
      "filename": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/index.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _controller = _interopRequireDefault(require(\"./auth/controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n_controller[\"default\"].auth();\n\nvar app = require('./app');\n\nvar data = require('./createDataBase');\n\nvar _require = require(\"./config\"),\n    connection = _require.connection;\n\ndata.createDataBase();\n\nvar start = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {\n    return regeneratorRuntime.wrap(function _callee22$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            //////////////////// USER ///////////////////\n            // CREATE user\n            app.post('/user', /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {\n                var _req$body, firstname, lastname, username, phonenumber, password, att, values, inValues, sql;\n\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _req$body = req.body, firstname = _req$body.firstname, lastname = _req$body.lastname, username = _req$body.username, phonenumber = _req$body.phonenumber, password = _req$body.password;\n                        att = \"firstname, lastname,username, phonenumber,password \";\n                        values = [firstname, lastname, username, phonenumber, password];\n                        inValues = \"?,?,?,?,?\";\n\n                        try {\n                          sql = \"INSERT INTO users (\".concat(att, \") VALUES (\").concat(inValues, \")\");\n                          connection.query(sql, values, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x, _x2, _x3) {\n                return _ref2.apply(this, arguments);\n              };\n            }()); //get one user by id\n\n            app.get('/user/:id', /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        id = req.params.id;\n\n                        try {\n                          sql = \"SELECT * FROM users WHERE id = \".concat(id, \" LIMIT 1\");\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result[0]\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x4, _x5, _x6) {\n                return _ref3.apply(this, arguments);\n              };\n            }()); //get all the users\n\n            app.get('/user', /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res, next) {\n                var sql;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        try {\n                          sql = \"SELECT * FROM users\";\n                          connection.query(sql, function (err, result) {\n                            if (!result) {\n                              res.json({\n                                error: err\n                              });\n                            }\n\n                            ;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 1:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x7, _x8, _x9) {\n                return _ref4.apply(this, arguments);\n              };\n            }());\n            app.get('/driversss', /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res, next) {\n                var sql;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        try {\n                          sql = \"SELECT * FROM users where role=0\";\n                          connection.query(sql, function (err, result) {\n                            if (!result) {\n                              res.json({\n                                error: err\n                              });\n                            }\n\n                            ;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 1:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x10, _x11, _x12) {\n                return _ref5.apply(this, arguments);\n              };\n            }()); //delete user\n\n            app[\"delete\"]('/user/:id', /*#__PURE__*/function () {\n              var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        id = req.params.id;\n\n                        try {\n                          sql = \"DELETE FROM users WHERE id = \".concat(id);\n                          connection.query(sql, function (err, result) {\n                            if (!result) {\n                              res.json({\n                                error: err\n                              });\n                            }\n\n                            ;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n\n              return function (_x13, _x14, _x15) {\n                return _ref6.apply(this, arguments);\n              };\n            }()); ////// update user\n\n            app.put('/user/:id', function (req, res) {\n              var id = req.params.id;\n              var _req$body2 = req.body,\n                  firstname = _req$body2.firstname,\n                  lastname = _req$body2.lastname,\n                  username = _req$body2.username,\n                  phonenumber = _req$body2.phonenumber,\n                  password = _req$body2.password;\n              var str = \"\";\n              var values = [];\n\n              if (firstname) {\n                str += \" firstname = ?,\";\n                values.push(firstname);\n              }\n\n              if (lastname) {\n                str += \" lastname = ?,\";\n                values.push(lastname);\n              }\n\n              if (username) {\n                str += \" username = ?,\";\n                values.push(username);\n              }\n\n              if (phonenumber) {\n                str += \" phonenumber = ?,\";\n                values.push(phonenumber);\n              }\n\n              if (password) {\n                str += \" password = ?,\";\n                values.push(password);\n              }\n\n              str = str.slice(0, -1);\n              str += \" WHERE id= ?\";\n              values.push(id);\n              var sql = \"UPDATE users SET \".concat(str);\n              connection.query(sql, values, function (err, result) {\n                if (!result) {\n                  res.send({\n                    error: false\n                  });\n                }\n\n                res.send({\n                  success: true,\n                  result: result\n                });\n              });\n            }); ///////////////////////// trip //////////////////////\n            // CREATE trip\n\n            app.post('/trip', /*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res, next) {\n                var _req$body3, tripe_title, route, att, values, inValues, sql;\n\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        _req$body3 = req.body, tripe_title = _req$body3.tripe_title, route = _req$body3.route;\n                        att = \" tripe_title, route \";\n                        values = [tripe_title, route];\n                        inValues = \"?,?\";\n\n                        try {\n                          sql = \"INSERT INTO trip (\".concat(att, \") VALUES (\").concat(inValues, \")\");\n                          connection.query(sql, values, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n\n              return function (_x16, _x17, _x18) {\n                return _ref7.apply(this, arguments);\n              };\n            }()); //get one trip by id\n\n            app.get('/trip/:id', /*#__PURE__*/function () {\n              var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        id = req.params.id;\n\n                        try {\n                          sql = \"SELECT * FROM trip WHERE id = \".concat(id, \" LIMIT 1\");\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result[0]\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7);\n              }));\n\n              return function (_x19, _x20, _x21) {\n                return _ref8.apply(this, arguments);\n              };\n            }()); //get all the trip\n\n            app.get('/trip', /*#__PURE__*/function () {\n              var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res, next) {\n                var sql;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        try {\n                          sql = \"SELECT * FROM trip\";\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 1:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8);\n              }));\n\n              return function (_x22, _x23, _x24) {\n                return _ref9.apply(this, arguments);\n              };\n            }()); //delete trip\n\n            app[\"delete\"]('/trip/:id', /*#__PURE__*/function () {\n              var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        id = req.params.id;\n\n                        try {\n                          sql = \"DELETE FROM trip WHERE id = \".concat(id);\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9);\n              }));\n\n              return function (_x25, _x26, _x27) {\n                return _ref10.apply(this, arguments);\n              };\n            }()); ////// update trip\n\n            app.put('/trip/:id', function (req, res) {\n              var id = req.params.id;\n              var _req$body4 = req.body,\n                  tripe_title = _req$body4.tripe_title,\n                  route = _req$body4.route;\n              var str = \"\";\n              var values = [];\n\n              if (tripe_title) {\n                str += \" tripe_title = ?,\";\n                values.push(tripe_title);\n              }\n\n              if (route) {\n                str += \" route = ?,\";\n                values.push(route);\n              }\n\n              str = str.slice(0, -1);\n              str += \" WHERE id= ?\";\n              values.push(id);\n              var sql = \"UPDATE trip SET \".concat(str);\n              connection.query(sql, values, function (err, result) {\n                if (err) throw err;\n                res.send({\n                  success: true,\n                  result: result\n                });\n              });\n            }); ////////////////////// BUS //////////////////////////////\n            // CREATE bus\n\n            app.post('/bus', /*#__PURE__*/function () {\n              var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res, next) {\n                var _req$body5, time, date, longitude, laltitude, empty_place, total_place, id_trip, id_users, att, values, inValues, sql;\n\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        _req$body5 = req.body, time = _req$body5.time, date = _req$body5.date, longitude = _req$body5.longitude, laltitude = _req$body5.laltitude, empty_place = _req$body5.empty_place, total_place = _req$body5.total_place, id_trip = _req$body5.id_trip, id_users = _req$body5.id_users;\n                        att = \"time, date, longitude, laltitude, empty_place, total_place, id_trip, id_users\";\n                        values = [time, date, longitude, laltitude, empty_place, total_place, id_trip, id_users];\n                        inValues = \"?,?,?,?,?,?,?,?\";\n\n                        try {\n                          sql = \"INSERT INTO bus (\".concat(att, \") VALUES (\").concat(inValues, \")\");\n                          connection.query(sql, values, function (err, result) {\n                            if (!result) {\n                              res.json({\n                                error: err\n                              });\n                              return;\n                            }\n\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10);\n              }));\n\n              return function (_x28, _x29, _x30) {\n                return _ref11.apply(this, arguments);\n              };\n            }()); //get one bus by id\n\n            app.get('/bus/:id', /*#__PURE__*/function () {\n              var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        id = req.params.id;\n\n                        try {\n                          sql = \"SELECT * FROM bus WHERE id = \".concat(id, \" LIMIT 1\");\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result[0]\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11);\n              }));\n\n              return function (_x31, _x32, _x33) {\n                return _ref12.apply(this, arguments);\n              };\n            }()); //get all the bus\n\n            app.get('/bus', /*#__PURE__*/function () {\n              var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(req, res, next) {\n                var sql;\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        try {\n                          sql = \"SELECT * FROM bus\";\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 1:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12);\n              }));\n\n              return function (_x34, _x35, _x36) {\n                return _ref13.apply(this, arguments);\n              };\n            }()); //delete user\n\n            app[\"delete\"]('/bus/:id', /*#__PURE__*/function () {\n              var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                  while (1) {\n                    switch (_context13.prev = _context13.next) {\n                      case 0:\n                        id = req.params.id;\n\n                        try {\n                          sql = \"DELETE FROM bus WHERE id = \".concat(id);\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context13.stop();\n                    }\n                  }\n                }, _callee13);\n              }));\n\n              return function (_x37, _x38, _x39) {\n                return _ref14.apply(this, arguments);\n              };\n            }()); ////// update bus\n\n            app.put('/bus/:id', function (req, res) {\n              var id = req.params.id;\n              var _req$body6 = req.body,\n                  time = _req$body6.time,\n                  date = _req$body6.date,\n                  longitude = _req$body6.longitude,\n                  laltitude = _req$body6.laltitude,\n                  empty_place = _req$body6.empty_place,\n                  total_place = _req$body6.total_place,\n                  id_trip = _req$body6.id_trip;\n              var str = \"\";\n              var values = [];\n\n              if (time) {\n                str += \" time = ?,\";\n                values.push(time);\n              }\n\n              if (date) {\n                str += \" date = ?,\";\n                values.push(date);\n              }\n\n              if (longitude) {\n                str += \" longitude = ?,\";\n                values.push(longitude);\n              }\n\n              if (laltitude) {\n                str += \" laltitude = ?,\";\n                values.push(laltitude);\n              }\n\n              if (empty_place) {\n                str += \" empty_place = ?,\";\n                values.push(empty_place);\n              }\n\n              if (total_place) {\n                str += \" total_place = ?,\";\n                values.push(total_place);\n              }\n\n              if (id_trip) {\n                str += \" id_trip = ?,\";\n                values.push(id_trip);\n              }\n\n              str = str.slice(0, -1);\n              str += \" WHERE id= ?\";\n              values.push(id);\n              var sql = \"UPDATE bus SET \".concat(str);\n              connection.query(sql, values, function (err, result) {\n                if (err) throw err;\n                res.send({\n                  success: true,\n                  result: result\n                });\n              });\n            }); //////////////////// RESERVATION ///////////////////\n            // CREATE reservation\n\n            app.post('/reservation', /*#__PURE__*/function () {\n              var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(req, res, next) {\n                var _req$body7, firstname, lastname, phonenumber, pickup_address, id_bus, id_users, att, values, inValues, sql;\n\n                return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                  while (1) {\n                    switch (_context14.prev = _context14.next) {\n                      case 0:\n                        _req$body7 = req.body, firstname = _req$body7.firstname, lastname = _req$body7.lastname, phonenumber = _req$body7.phonenumber, pickup_address = _req$body7.pickup_address, id_bus = _req$body7.id_bus, id_users = _req$body7.id_users;\n                        att = \" firstname,lastname, phonenumber,pickup_address, id_bus, id_users \";\n                        values = [firstname, lastname, phonenumber, pickup_address, id_bus, id_users];\n                        inValues = \"?,?,?,?,?,?\";\n\n                        try {\n                          sql = \"INSERT INTO reservation (\".concat(att, \") VALUES (\").concat(inValues, \")\");\n                          connection.query(sql, values, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context14.stop();\n                    }\n                  }\n                }, _callee14);\n              }));\n\n              return function (_x40, _x41, _x42) {\n                return _ref15.apply(this, arguments);\n              };\n            }()); //get one reservation by id\n\n            app.get('/reservation/:id', /*#__PURE__*/function () {\n              var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee15$(_context15) {\n                  while (1) {\n                    switch (_context15.prev = _context15.next) {\n                      case 0:\n                        id = req.params.id;\n\n                        try {\n                          sql = \"SELECT * FROM reservation WHERE id = \".concat(id, \" LIMIT 1\");\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result[0]\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context15.stop();\n                    }\n                  }\n                }, _callee15);\n              }));\n\n              return function (_x43, _x44, _x45) {\n                return _ref16.apply(this, arguments);\n              };\n            }()); //get all the reservation\n\n            app.get('/reservation', /*#__PURE__*/function () {\n              var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(req, res, next) {\n                var sql;\n                return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                  while (1) {\n                    switch (_context16.prev = _context16.next) {\n                      case 0:\n                        try {\n                          sql = \"SELECT * FROM reservation\";\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 1:\n                      case \"end\":\n                        return _context16.stop();\n                    }\n                  }\n                }, _callee16);\n              }));\n\n              return function (_x46, _x47, _x48) {\n                return _ref17.apply(this, arguments);\n              };\n            }()); //delete reservation trip\n\n            app[\"delete\"]('/reservation/:id', /*#__PURE__*/function () {\n              var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                  while (1) {\n                    switch (_context17.prev = _context17.next) {\n                      case 0:\n                        id = req.params.id;\n\n                        try {\n                          sql = \"DELETE FROM reservation WHERE id = \".concat(id);\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context17.stop();\n                    }\n                  }\n                }, _callee17);\n              }));\n\n              return function (_x49, _x50, _x51) {\n                return _ref18.apply(this, arguments);\n              };\n            }());\n            app.get('/joinuser', /*#__PURE__*/function () {\n              var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(req, res, next) {\n                var sql;\n                return regeneratorRuntime.wrap(function _callee18$(_context18) {\n                  while (1) {\n                    switch (_context18.prev = _context18.next) {\n                      case 0:\n                        try {\n                          sql = \"SELECT \\n\\n                    reservation.firstname,\\n                    reservation.lastname,\\n                    reservation.phonenumber,\\n                    reservation.pickup_address,\\n        \\n                    bus.date,\\n                    bus.time,\\n\\n                    trip.tripe_title as trip\\n                    \\n                    FROM reservation \\n                    JOIN bus ON bus.id = reservation.id_bus\\n                    JOIN trip ON trip.id = bus.id_trip\\n                    \";\n                          connection.query(sql, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 1:\n                      case \"end\":\n                        return _context18.stop();\n                    }\n                  }\n                }, _callee18);\n              }));\n\n              return function (_x52, _x53, _x54) {\n                return _ref19.apply(this, arguments);\n              };\n            }()); ////// update reservation\n\n            app.put('/reservation/:id', function (req, res) {\n              var id = req.params.id;\n              var _req$body8 = req.body,\n                  pickup_adress = _req$body8.pickup_adress,\n                  id_bus = _req$body8.id_bus,\n                  id_users = _req$body8.id_users;\n              var str = \"\";\n              var values = [];\n\n              if (pickup_address) {\n                str += \" pickup_address = ?,\";\n                values.push(pickup_address);\n              }\n\n              if (id_bus) {\n                str += \" id_bus = ?,\";\n                values.push(id_bus);\n              }\n\n              if (id_users) {\n                str += \" id_users = ?,\";\n                values.push(id_users);\n              }\n\n              str = str.slice(0, -1);\n              str += \" WHERE id= ?\";\n              values.push(id);\n              var sql = \"UPDATE reservation SET \".concat(str);\n              connection.query(sql, values, function (err, result) {\n                if (err) throw err;\n                res.send({\n                  success: true,\n                  result: result\n                });\n              });\n            }); ///////////////mssg/////////////////\n\n            app.get('/mssg', /*#__PURE__*/function () {\n              var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(req, res, next) {\n                var sql;\n                return regeneratorRuntime.wrap(function _callee19$(_context19) {\n                  while (1) {\n                    switch (_context19.prev = _context19.next) {\n                      case 0:\n                        try {\n                          sql = \"SELECT * FROM mssg\";\n                          connection.query(sql, function (err, result) {\n                            if (!result) {\n                              res.json({\n                                error: false\n                              });\n                            }\n\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 1:\n                      case \"end\":\n                        return _context19.stop();\n                    }\n                  }\n                }, _callee19);\n              }));\n\n              return function (_x55, _x56, _x57) {\n                return _ref20.apply(this, arguments);\n              };\n            }()); // CREATE mssg\n\n            app.post('/mssg', /*#__PURE__*/function () {\n              var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(req, res, next) {\n                var _req$body9, name, email, phonenumber, message, att, values, inValues, sql;\n\n                return regeneratorRuntime.wrap(function _callee20$(_context20) {\n                  while (1) {\n                    switch (_context20.prev = _context20.next) {\n                      case 0:\n                        _req$body9 = req.body, name = _req$body9.name, email = _req$body9.email, phonenumber = _req$body9.phonenumber, message = _req$body9.message;\n                        att = \"name, email, phonenumber,message \";\n                        values = [name, email, phonenumber, message];\n                        inValues = \"?,?,?,?\";\n\n                        try {\n                          sql = \"INSERT INTO mssg (\".concat(att, \") VALUES (\").concat(inValues, \")\");\n                          connection.query(sql, values, function (err, result) {\n                            if (err) throw err;\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context20.stop();\n                    }\n                  }\n                }, _callee20);\n              }));\n\n              return function (_x58, _x59, _x60) {\n                return _ref21.apply(this, arguments);\n              };\n            }());\n            app[\"delete\"]('/mssg/:id', /*#__PURE__*/function () {\n              var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(req, res, next) {\n                var id, sql;\n                return regeneratorRuntime.wrap(function _callee21$(_context21) {\n                  while (1) {\n                    switch (_context21.prev = _context21.next) {\n                      case 0:\n                        id = req.params.id;\n\n                        try {\n                          sql = \"DELETE FROM mssg WHERE id = \".concat(id);\n                          connection.query(sql, function (err, result) {\n                            if (!result) {\n                              res.json({\n                                error: false\n                              });\n                            }\n\n                            res.json({\n                              success: true,\n                              result: result\n                            });\n                          });\n                        } catch (e) {\n                          next(e);\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context21.stop();\n                    }\n                  }\n                }, _callee21);\n              }));\n\n              return function (_x61, _x62, _x63) {\n                return _ref22.apply(this, arguments);\n              };\n            }());\n\n          case 25:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    }, _callee22);\n  }));\n\n  return function start() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\napp.get('/', function (req, res) {\n  return res.send(\"ok\");\n});\napp.listen(process.env.PORT || 8000, function () {\n  return console.log('server listening on port 8000');\n});\nstart();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "auth",
        "app",
        "require",
        "data",
        "connection",
        "createDataBase",
        "start",
        "post",
        "req",
        "res",
        "next",
        "body",
        "firstname",
        "lastname",
        "username",
        "phonenumber",
        "password",
        "att",
        "values",
        "inValues",
        "sql",
        "query",
        "err",
        "result",
        "json",
        "success",
        "e",
        "get",
        "id",
        "params",
        "error",
        "put",
        "str",
        "push",
        "slice",
        "send",
        "tripe_title",
        "route",
        "time",
        "date",
        "longitude",
        "laltitude",
        "empty_place",
        "total_place",
        "id_trip",
        "id_users",
        "pickup_address",
        "id_bus",
        "pickup_adress",
        "name",
        "email",
        "message",
        "listen",
        "process",
        "env",
        "PORT",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/",
      "sourcesContent": [
        "import auth from './auth/controller';\nauth.auth();\n\nconst app = require('./app');\nconst data = require('./createDataBase');\n\nlet { connection } = require(\"./config\");\ndata.createDataBase();\n\nconst start = async () => {\n\n    //////////////////// USER ///////////////////\n    // CREATE user\n    app.post('/user', async (req, res, next) => {\n        const { firstname, lastname, username, phonenumber, password } = req.body;\n        let att = \"firstname, lastname,username, phonenumber,password \";\n        let values = [firstname, lastname, username, phonenumber, password];\n        let inValues = \"?,?,?,?,?\";\n        try {\n            let sql = `INSERT INTO users (${att}) VALUES (${inValues})`;\n            connection.query(sql, values, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n    //get one user by id\n    app.get('/user/:id', async (req, res, next) => {\n        const { id } = req.params;\n        try {\n            let sql = `SELECT * FROM users WHERE id = ${id} LIMIT 1`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result: result[0] });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n    //get all the users\n    app.get('/user', async (req, res, next) => {\n        try {\n            let sql = `SELECT * FROM users`;\n            connection.query(sql, function (err, result) {\n                if (!result) {\n                    res.json({ error: err });\n                };\n\n                res.json({ success: true, result });\n\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n\n\n\n\n    app.get('/driversss', async (req, res, next) => {\n        try {\n            let sql = `SELECT * FROM users where role=0`;\n            connection.query(sql, function (err, result) {\n                if (!result) {\n                    res.json({ error: err });\n                };\n\n                res.json({ success: true, result });\n\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n\n\n\n\n\n\n    //delete user\n    app.delete('/user/:id', async (req, res, next) => {\n        const { id } = req.params;\n        try {\n            let sql = `DELETE FROM users WHERE id = ${id}`;\n            connection.query(sql, function (err, result) {\n                if (!result) {\n                    res.json({ error: err });\n                };\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n    ////// update user\n    app.put('/user/:id', (req, res) => {\n        let { id } = req.params;\n        let { firstname, lastname, username, phonenumber, password } = req.body;\n        let str = \"\";\n        let values = [];\n\n        if (firstname) {\n            str += \" firstname = ?,\";\n            values.push(firstname);\n        }\n        if (lastname) {\n            str += \" lastname = ?,\";\n            values.push(lastname);\n        }\n        if (username) {\n            str += \" username = ?,\";\n            values.push(username);\n        }\n        if (phonenumber) {\n            str += \" phonenumber = ?,\";\n            values.push(phonenumber);\n        }\n        if (password) {\n            str += \" password = ?,\";\n            values.push(password);\n        }\n\n\n        str = str.slice(0, -1);\n        str += \" WHERE id= ?\"\n        values.push(id);\n\n        let sql = `UPDATE users SET ${str}`;\n        connection.query(sql, values, function (err, result) {\n            if (!result) {\n                res.send({ error: false });\n            }\n            res.send({ success: true, result });\n        });\n    });\n\n    ///////////////////////// trip //////////////////////\n\n    // CREATE trip\n    app.post('/trip', async (req, res, next) => {\n        const { tripe_title, route } = req.body;\n        let att = \" tripe_title, route \";\n        let values = [tripe_title, route];\n        let inValues = \"?,?\";\n        try {\n            let sql = `INSERT INTO trip (${att}) VALUES (${inValues})`;\n            connection.query(sql, values, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n    //get one trip by id\n    app.get('/trip/:id', async (req, res, next) => {\n        const { id } = req.params;\n        try {\n            let sql = `SELECT * FROM trip WHERE id = ${id} LIMIT 1`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result: result[0] });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n    //get all the trip\n    app.get('/trip', async (req, res, next) => {\n        try {\n            let sql = `SELECT * FROM trip`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n    //delete trip\n    app.delete('/trip/:id', async (req, res, next) => {\n        const { id } = req.params;\n        try {\n            let sql = `DELETE FROM trip WHERE id = ${id}`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n    ////// update trip\n    app.put('/trip/:id', (req, res) => {\n        let { id } = req.params;\n        let { tripe_title, route } = req.body;\n        let str = \"\";\n        let values = [];\n\n        if (tripe_title) {\n            str += \" tripe_title = ?,\";\n            values.push(tripe_title);\n        }\n\n        if (route) {\n            str += \" route = ?,\";\n            values.push(route);\n        }\n\n\n\n\n        str = str.slice(0, -1);\n        str += \" WHERE id= ?\"\n        values.push(id);\n\n        let sql = `UPDATE trip SET ${str}`;\n        connection.query(sql, values, function (err, result) {\n            if (err) throw err;\n            res.send({ success: true, result });\n        });\n    });\n\n    ////////////////////// BUS //////////////////////////////\n\n    // CREATE bus\n    app.post('/bus', async (req, res, next) => {\n        const { time, date, longitude, laltitude, empty_place, total_place, id_trip, id_users } = req.body;\n        let att = \"time, date, longitude, laltitude, empty_place, total_place, id_trip, id_users\";\n        let values = [time, date, longitude, laltitude, empty_place, total_place, id_trip, id_users];\n        let inValues = \"?,?,?,?,?,?,?,?\";\n        try {\n            let sql = `INSERT INTO bus (${att}) VALUES (${inValues})`;\n            connection.query(sql, values, function (err, result) {\n                if (!result) {\n                    res.json({ error: err })\n                    return\n                }\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n    //get one bus by id\n    app.get('/bus/:id', async (req, res, next) => {\n        const { id } = req.params;\n        try {\n            let sql = `SELECT * FROM bus WHERE id = ${id} LIMIT 1`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result: result[0] });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n    //get all the bus\n    app.get('/bus', async (req, res, next) => {\n        try {\n            let sql = `SELECT * FROM bus`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n\n    //delete user\n    app.delete('/bus/:id', async (req, res, next) => {\n        const { id } = req.params;\n        try {\n            let sql = `DELETE FROM bus WHERE id = ${id}`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n    ////// update bus\n    app.put('/bus/:id', (req, res) => {\n        let { id } = req.params;\n        let { time, date, longitude, laltitude, empty_place, total_place, id_trip } = req.body;\n        let str = \"\";\n        let values = [];\n\n        if (time) {\n            str += \" time = ?,\";\n            values.push(time);\n        }\n        if (date) {\n            str += \" date = ?,\";\n            values.push(date);\n        }\n        if (longitude) {\n            str += \" longitude = ?,\";\n            values.push(longitude);\n        }\n        if (laltitude) {\n            str += \" laltitude = ?,\";\n            values.push(laltitude);\n        }\n        if (empty_place) {\n            str += \" empty_place = ?,\";\n            values.push(empty_place);\n        }\n        if (total_place) {\n            str += \" total_place = ?,\";\n            values.push(total_place);\n        }\n        if (id_trip) {\n            str += \" id_trip = ?,\";\n            values.push(id_trip);\n        }\n\n\n\n        str = str.slice(0, -1);\n        str += \" WHERE id= ?\"\n        values.push(id);\n\n        let sql = `UPDATE bus SET ${str}`;\n        connection.query(sql, values, function (err, result) {\n            if (err) throw err;\n            res.send({ success: true, result });\n        });\n    });\n\n    //////////////////// RESERVATION ///////////////////\n\n    // CREATE reservation\n    app.post('/reservation', async (req, res, next) => {\n        const { firstname, lastname, phonenumber, pickup_address, id_bus, id_users } = req.body;\n        let att = \" firstname,lastname, phonenumber,pickup_address, id_bus, id_users \";\n        let values = [firstname, lastname, phonenumber, pickup_address, id_bus, id_users];\n        let inValues = \"?,?,?,?,?,?\";\n        try {\n            let sql = `INSERT INTO reservation (${att}) VALUES (${inValues})`;\n            connection.query(sql, values, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n    //get one reservation by id\n    app.get('/reservation/:id', async (req, res, next) => {\n        const { id } = req.params;\n        try {\n            let sql = `SELECT * FROM reservation WHERE id = ${id} LIMIT 1`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result: result[0] });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n    //get all the reservation\n    app.get('/reservation', async (req, res, next) => {\n        try {\n            let sql = `SELECT * FROM reservation`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n    //delete reservation trip\n    app.delete('/reservation/:id', async (req, res, next) => {\n        const { id } = req.params;\n        try {\n            let sql = `DELETE FROM reservation WHERE id = ${id}`;\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n\n    app.get('/joinuser', async (req, res, next) => {\n\n        try {\n            let sql = `SELECT \n\n                    reservation.firstname,\n                    reservation.lastname,\n                    reservation.phonenumber,\n                    reservation.pickup_address,\n        \n                    bus.date,\n                    bus.time,\n\n                    trip.tripe_title as trip\n                    \n                    FROM reservation \n                    JOIN bus ON bus.id = reservation.id_bus\n                    JOIN trip ON trip.id = bus.id_trip\n                    `;\n\n            connection.query(sql, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n\n    ////// update reservation\n    app.put('/reservation/:id', (req, res) => {\n        let { id } = req.params;\n        let { pickup_adress, id_bus, id_users } = req.body;\n        let str = \"\";\n        let values = [];\n\n        if (pickup_address) {\n            str += \" pickup_address = ?,\";\n            values.push(pickup_address);\n        }\n        if (id_bus) {\n            str += \" id_bus = ?,\";\n            values.push(id_bus);\n        }\n        if (id_users) {\n            str += \" id_users = ?,\";\n            values.push(id_users);\n        }\n\n\n\n        str = str.slice(0, -1);\n        str += \" WHERE id= ?\"\n        values.push(id);\n\n        let sql = `UPDATE reservation SET ${str}`;\n        connection.query(sql, values, function (err, result) {\n            if (err) throw err;\n            res.send({ success: true, result });\n        });\n    });\n\n    ///////////////mssg/////////////////\n\n    app.get('/mssg', async (req, res, next) => {\n        try {\n            let sql = `SELECT * FROM mssg`;\n            connection.query(sql, function (err, result) {\n                if (!result) {\n                    res.json({ error: false })\n                }\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n\n\n    // CREATE mssg\n    app.post('/mssg', async (req, res, next) => {\n        const { name, email, phonenumber, message } = req.body;\n        let att = \"name, email, phonenumber,message \";\n        let values = [name, email, phonenumber, message];\n        let inValues = \"?,?,?,?\";\n        try {\n            let sql = `INSERT INTO mssg (${att}) VALUES (${inValues})`;\n            connection.query(sql, values, function (err, result) {\n                if (err) throw err;\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n\n\n    app.delete('/mssg/:id', async (req, res, next) => {\n        const { id } = req.params;\n        try {\n            let sql = `DELETE FROM mssg WHERE id = ${id}`;\n            connection.query(sql, function (err, result) {\n                if (!result) {\n                    res.json({ error: false })\n                }\n                res.json({ success: true, result });\n            });\n        } catch (e) {\n            next(e);\n        }\n    });\n}\napp.get('/', (req, res) => res.send(\"ok\"));\napp.listen(process.env.PORT || 8000, () => console.log('server listening on port 8000'));\nstart();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1632814232108
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back\",\"filename\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back",
      "filename": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/app.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/app.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/",
        "sourceFileName": "app.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar cookieParser = require('cookie-parser');\n\nvar session = require('express-session');\n\nvar favicon = require('serve-favicon');\n\nvar cors = require('cors');\n\nvar createError = require('http-errors');\n\nvar path = require('path');\n\nvar bodyParser = require(\"body-parser\");\n\nvar app = express();\nvar IS_PRODUCTION = app.get('env') === 'production';\n\nif (IS_PRODUCTION) {\n  app.set('trust proxy', 1);\n}\n\napp.use(cors());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json());\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\napp.use(cookieParser());\napp.use(favicon(path.join(__dirname, '../public', 'favicon.ico')));\napp.use(express[\"static\"](path.join(__dirname, '../public')));\napp.use(session({\n  secret: 'keyboard cat',\n  cookie: {\n    secure: IS_PRODUCTION\n  },\n  resave: true,\n  saveUninitialized: true\n}));\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImNvb2tpZVBhcnNlciIsInNlc3Npb24iLCJmYXZpY29uIiwiY29ycyIsImNyZWF0ZUVycm9yIiwicGF0aCIsImJvZHlQYXJzZXIiLCJhcHAiLCJJU19QUk9EVUNUSU9OIiwiZ2V0Iiwic2V0IiwidXNlIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsImpvaW4iLCJfX2Rpcm5hbWUiLCJzZWNyZXQiLCJjb29raWUiLCJzZWN1cmUiLCJyZXNhdmUiLCJzYXZlVW5pbml0aWFsaXplZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxZQUFZLEdBQUdELE9BQU8sQ0FBQyxlQUFELENBQTVCOztBQUNBLElBQU1FLE9BQU8sR0FBR0YsT0FBTyxDQUFDLGlCQUFELENBQXZCOztBQUNBLElBQU1HLE9BQU8sR0FBR0gsT0FBTyxDQUFDLGVBQUQsQ0FBdkI7O0FBQ0EsSUFBTUksSUFBSSxHQUFHSixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNSyxXQUFXLEdBQUdMLE9BQU8sQ0FBQyxhQUFELENBQTNCOztBQUNBLElBQU1NLElBQUksR0FBR04sT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTU8sVUFBVSxHQUFHUCxPQUFPLENBQUMsYUFBRCxDQUExQjs7QUFFQSxJQUFNUSxHQUFHLEdBQUdULE9BQU8sRUFBbkI7QUFFQSxJQUFNVSxhQUFhLEdBQUdELEdBQUcsQ0FBQ0UsR0FBSixDQUFRLEtBQVIsTUFBbUIsWUFBekM7O0FBRUEsSUFBSUQsYUFBSixFQUFtQjtBQUNmRCxFQUFBQSxHQUFHLENBQUNHLEdBQUosQ0FBUSxhQUFSLEVBQXVCLENBQXZCO0FBQ0g7O0FBRURILEdBQUcsQ0FBQ0ksR0FBSixDQUFRUixJQUFJLEVBQVo7QUFDQUksR0FBRyxDQUFDSSxHQUFKLENBQVFMLFVBQVUsQ0FBQ00sVUFBWCxDQUFzQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSO0FBQ0FOLEdBQUcsQ0FBQ0ksR0FBSixDQUFRTCxVQUFVLENBQUNRLElBQVgsRUFBUjtBQUNBUCxHQUFHLENBQUNJLEdBQUosQ0FBUWIsT0FBTyxDQUFDZ0IsSUFBUixFQUFSO0FBQ0FQLEdBQUcsQ0FBQ0ksR0FBSixDQUFRYixPQUFPLENBQUNjLFVBQVIsQ0FBbUI7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBbkIsQ0FBUjtBQUNBTixHQUFHLENBQUNJLEdBQUosQ0FBUVgsWUFBWSxFQUFwQjtBQUNBTyxHQUFHLENBQUNJLEdBQUosQ0FBUVQsT0FBTyxDQUFDRyxJQUFJLENBQUNVLElBQUwsQ0FBVUMsU0FBVixFQUFxQixXQUFyQixFQUFrQyxhQUFsQyxDQUFELENBQWY7QUFDQVQsR0FBRyxDQUFDSSxHQUFKLENBQVFiLE9BQU8sVUFBUCxDQUFlTyxJQUFJLENBQUNVLElBQUwsQ0FBVUMsU0FBVixFQUFxQixXQUFyQixDQUFmLENBQVI7QUFDQVQsR0FBRyxDQUFDSSxHQUFKLENBQVFWLE9BQU8sQ0FBQztBQUNaZ0IsRUFBQUEsTUFBTSxFQUFFLGNBREk7QUFFWkMsRUFBQUEsTUFBTSxFQUFFO0FBQUVDLElBQUFBLE1BQU0sRUFBRVg7QUFBVixHQUZJO0FBR1pZLEVBQUFBLE1BQU0sRUFBRSxJQUhJO0FBSVpDLEVBQUFBLGlCQUFpQixFQUFFO0FBSlAsQ0FBRCxDQUFmO0FBT0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmhCLEdBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2RhbGlhL0Rlc2t0b3AvY29kaS9Qcm9qZWN0QnlNZS9Db25uZXgvQ29ubmV4L2JhY2svc3JjLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCBjb29raWVQYXJzZXIgPSByZXF1aXJlKCdjb29raWUtcGFyc2VyJyk7XG5jb25zdCBzZXNzaW9uID0gcmVxdWlyZSgnZXhwcmVzcy1zZXNzaW9uJyk7XG5jb25zdCBmYXZpY29uID0gcmVxdWlyZSgnc2VydmUtZmF2aWNvbicpO1xuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcbmNvbnN0IGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnaHR0cC1lcnJvcnMnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZShcImJvZHktcGFyc2VyXCIpO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmNvbnN0IElTX1BST0RVQ1RJT04gPSBhcHAuZ2V0KCdlbnYnKSA9PT0gJ3Byb2R1Y3Rpb24nO1xuXG5pZiAoSVNfUFJPRFVDVElPTikge1xuICAgIGFwcC5zZXQoJ3RydXN0IHByb3h5JywgMSlcbn1cblxuYXBwLnVzZShjb3JzKCkpO1xuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuYXBwLnVzZShleHByZXNzLnVybGVuY29kZWQoeyBleHRlbmRlZDogZmFsc2UgfSkpO1xuYXBwLnVzZShjb29raWVQYXJzZXIoKSk7XG5hcHAudXNlKGZhdmljb24ocGF0aC5qb2luKF9fZGlybmFtZSwgJy4uL3B1YmxpYycsICdmYXZpY29uLmljbycpKSlcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgJy4uL3B1YmxpYycpKSk7XG5hcHAudXNlKHNlc3Npb24oe1xuICAgIHNlY3JldDogJ2tleWJvYXJkIGNhdCcsXG4gICAgY29va2llOiB7IHNlY3VyZTogSVNfUFJPRFVDVElPTiB9LFxuICAgIHJlc2F2ZTogdHJ1ZSxcbiAgICBzYXZlVW5pbml0aWFsaXplZDogdHJ1ZVxufSkpXG5cbm1vZHVsZS5leHBvcnRzID0gYXBwOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "cookieParser",
        "session",
        "favicon",
        "cors",
        "createError",
        "path",
        "bodyParser",
        "app",
        "IS_PRODUCTION",
        "get",
        "set",
        "use",
        "urlencoded",
        "extended",
        "json",
        "join",
        "__dirname",
        "secret",
        "cookie",
        "secure",
        "resave",
        "saveUninitialized",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,eAAD,CAA5B;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,iBAAD,CAAvB;;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,eAAD,CAAvB;;AACA,IAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMK,WAAW,GAAGL,OAAO,CAAC,aAAD,CAA3B;;AACA,IAAMM,IAAI,GAAGN,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMO,UAAU,GAAGP,OAAO,CAAC,aAAD,CAA1B;;AAEA,IAAMQ,GAAG,GAAGT,OAAO,EAAnB;AAEA,IAAMU,aAAa,GAAGD,GAAG,CAACE,GAAJ,CAAQ,KAAR,MAAmB,YAAzC;;AAEA,IAAID,aAAJ,EAAmB;AACfD,EAAAA,GAAG,CAACG,GAAJ,CAAQ,aAAR,EAAuB,CAAvB;AACH;;AAEDH,GAAG,CAACI,GAAJ,CAAQR,IAAI,EAAZ;AACAI,GAAG,CAACI,GAAJ,CAAQL,UAAU,CAACM,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAN,GAAG,CAACI,GAAJ,CAAQL,UAAU,CAACQ,IAAX,EAAR;AACAP,GAAG,CAACI,GAAJ,CAAQb,OAAO,CAACgB,IAAR,EAAR;AACAP,GAAG,CAACI,GAAJ,CAAQb,OAAO,CAACc,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAN,GAAG,CAACI,GAAJ,CAAQX,YAAY,EAApB;AACAO,GAAG,CAACI,GAAJ,CAAQT,OAAO,CAACG,IAAI,CAACU,IAAL,CAAUC,SAAV,EAAqB,WAArB,EAAkC,aAAlC,CAAD,CAAf;AACAT,GAAG,CAACI,GAAJ,CAAQb,OAAO,UAAP,CAAeO,IAAI,CAACU,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR;AACAT,GAAG,CAACI,GAAJ,CAAQV,OAAO,CAAC;AACZgB,EAAAA,MAAM,EAAE,cADI;AAEZC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,MAAM,EAAEX;AAAV,GAFI;AAGZY,EAAAA,MAAM,EAAE,IAHI;AAIZC,EAAAA,iBAAiB,EAAE;AAJP,CAAD,CAAf;AAOAC,MAAM,CAACC,OAAP,GAAiBhB,GAAjB",
      "sourceRoot": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/",
      "sourcesContent": [
        "const express = require('express');\nconst cookieParser = require('cookie-parser');\nconst session = require('express-session');\nconst favicon = require('serve-favicon');\nconst cors = require('cors');\nconst createError = require('http-errors');\nconst path = require('path');\nconst bodyParser = require(\"body-parser\");\n\nconst app = express();\n\nconst IS_PRODUCTION = app.get('env') === 'production';\n\nif (IS_PRODUCTION) {\n    app.set('trust proxy', 1)\n}\n\napp.use(cors());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(favicon(path.join(__dirname, '../public', 'favicon.ico')))\napp.use(express.static(path.join(__dirname, '../public')));\napp.use(session({\n    secret: 'keyboard cat',\n    cookie: { secure: IS_PRODUCTION },\n    resave: true,\n    saveUninitialized: true\n}))\n\nmodule.exports = app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1631094167500
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back\",\"filename\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/createDataBase.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back",
      "filename": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/createDataBase.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/createDataBase.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/createDataBase.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/",
        "sourceFileName": "createDataBase.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _require = require(\"./config\"),\n    connection = _require.connection;\n\nvar bcrypt = require(\"bcryptjs\");\n\nvar createDataBase = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var users, trip, bus, reservation, mssg, arr;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            //here we will write our query.\n            users = \"CREATE TABLE IF NOT EXISTS users (\\n    id INTEGER PRIMARY KEY AUTO_INCREMENT,\\n    role INTEGER NOT NULL DEFAULT 0,\\n    firstname TEXT, \\n    lastname TEXT,\\n    username TEXT ,\\n    phonenumber TEXT , \\n    password TEXT NOT NULL,\\n    token TEXT\\n    \\n    )\";\n            trip = \"CREATE TABLE IF NOT EXISTS trip (\\n        id INTEGER PRIMARY KEY AUTO_INCREMENT,\\n        tripe_title TEXT,\\n       route TEXT \\n        \\n        )\";\n            bus = \"CREATE TABLE IF NOT EXISTS bus (\\n        id INTEGER PRIMARY KEY AUTO_INCREMENT,\\n        time TEXT NOT NULL ,\\n        date  TEXT,\\n        longitude TEXT, \\n        laltitude TEXT,\\n        empty_place TEXT,\\n        total_place TEXT,\\n        id_trip INTEGER NOT NULL,\\n        id_users INTEGER NOT NULL,\\n        FOREIGN KEY (id_trip) REFERENCES trip(id),\\n        FOREIGN KEY (id_users) REFERENCES users(id)\\n          )\";\n            reservation = \"CREATE TABLE IF NOT EXISTS reservation (\\n                id INTEGER PRIMARY KEY AUTO_INCREMENT,\\n                firstname TEXT,\\n                lastname TEXT,\\n                phonenumber TEXT,\\n                pickup_address TEXT,\\n                id_bus INTEGER NOT NULL,\\n                id_users INTEGER NOT NULL,\\n                FOREIGN KEY (id_bus) REFERENCES bus(id),\\n                FOREIGN KEY (id_users) REFERENCES users(id)\\n                   )\";\n            mssg = \"CREATE TABLE IF NOT EXISTS mssg (\\n                    id INTEGER PRIMARY KEY AUTO_INCREMENT,\\n                    name TEXT,\\n                    email TEXT,\\n                    phonenumber TEXT,\\n                    message TEXT\\n                   \\n                 \\n                )\";\n            arr = [users, trip, bus, reservation, mssg];\n            arr.map(function (sql) {\n              connection.query(sql, function (err, result) {\n                if (err) throw err;\n              });\n            });\n            connection.query(\"SELECT * FROM users\", /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(err, result) {\n                var salt, hashedPassword, att, inValues, values, sql;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        if (!err) {\n                          _context.next = 2;\n                          break;\n                        }\n\n                        throw err;\n\n                      case 2:\n                        if (result.length) {\n                          _context.next = 14;\n                          break;\n                        }\n\n                        _context.next = 5;\n                        return bcrypt.genSalt(10);\n\n                      case 5:\n                        salt = _context.sent;\n                        _context.next = 8;\n                        return bcrypt.hash('admin', salt);\n\n                      case 8:\n                        hashedPassword = _context.sent;\n                        att = \"firstname, lastname, username, phonenumber, password, role\";\n                        inValues = \"?, ?, ?, ?, ?\";\n                        values = ['admin', 'admin', 'admin', '03000000', hashedPassword, 1];\n                        sql = \"INSERT INTO users (\".concat(att, \") VALUES (\").concat(inValues, \")\");\n                        connection.query(sql, values, function (err, result) {\n                          if (err) throw err;\n                        });\n\n                      case 14:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x, _x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function createDataBase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = {\n  createDataBase: createDataBase\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZURhdGFCYXNlLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25uZWN0aW9uIiwiYmNyeXB0IiwiY3JlYXRlRGF0YUJhc2UiLCJ1c2VycyIsInRyaXAiLCJidXMiLCJyZXNlcnZhdGlvbiIsIm1zc2ciLCJhcnIiLCJtYXAiLCJzcWwiLCJxdWVyeSIsImVyciIsInJlc3VsdCIsImxlbmd0aCIsImdlblNhbHQiLCJzYWx0IiwiaGFzaCIsImhhc2hlZFBhc3N3b3JkIiwiYXR0IiwiaW5WYWx1ZXMiLCJ2YWx1ZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxlQUFxQkEsT0FBTyxDQUFDLFVBQUQsQ0FBNUI7QUFBQSxJQUFNQyxVQUFOLFlBQU1BLFVBQU47O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFFQSxJQUFNRyxjQUFjO0FBQUEscUVBQUc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRW5CO0FBR0lDLFlBQUFBLEtBTGU7QUFrQmZDLFlBQUFBLElBbEJlO0FBNEJmQyxZQUFBQSxHQTVCZTtBQTRDZkMsWUFBQUEsV0E1Q2U7QUF3RGZDLFlBQUFBLElBeERlO0FBa0VmQyxZQUFBQSxHQWxFZSxHQWtFVCxDQUFDTCxLQUFELEVBQVFDLElBQVIsRUFBY0MsR0FBZCxFQUFtQkMsV0FBbkIsRUFBZ0NDLElBQWhDLENBbEVTO0FBb0VuQkMsWUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsVUFBQUMsR0FBRyxFQUFJO0FBQ1hWLGNBQUFBLFVBQVUsQ0FBQ1csS0FBWCxDQUFpQkQsR0FBakIsRUFBc0IsVUFBVUUsR0FBVixFQUFlQyxNQUFmLEVBQXVCO0FBQ3pDLG9CQUFJRCxHQUFKLEVBQVMsTUFBTUEsR0FBTjtBQUNaLGVBRkQ7QUFHSCxhQUpEO0FBTUFaLFlBQUFBLFVBQVUsQ0FBQ1csS0FBWDtBQUFBLGtGQUF3QyxpQkFBZ0JDLEdBQWhCLEVBQXFCQyxNQUFyQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSw2QkFDaENELEdBRGdDO0FBQUE7QUFBQTtBQUFBOztBQUFBLDhCQUNyQkEsR0FEcUI7O0FBQUE7QUFBQSw0QkFHL0JDLE1BQU0sQ0FBQ0MsTUFId0I7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSwrQkFJZmIsTUFBTSxDQUFDYyxPQUFQLENBQWUsRUFBZixDQUplOztBQUFBO0FBSTVCQyx3QkFBQUEsSUFKNEI7QUFBQTtBQUFBLCtCQUtMZixNQUFNLENBQUNnQixJQUFQLENBQVksT0FBWixFQUFxQkQsSUFBckIsQ0FMSzs7QUFBQTtBQUs1QkUsd0JBQUFBLGNBTDRCO0FBTzVCQyx3QkFBQUEsR0FQNEIsR0FPdEIsNERBUHNCO0FBUTVCQyx3QkFBQUEsUUFSNEIsR0FRakIsZUFSaUI7QUFTNUJDLHdCQUFBQSxNQVQ0QixHQVNuQixDQUFDLE9BQUQsRUFBVSxPQUFWLEVBQW1CLE9BQW5CLEVBQTRCLFVBQTVCLEVBQXdDSCxjQUF4QyxFQUF3RCxDQUF4RCxDQVRtQjtBQVU1QlIsd0JBQUFBLEdBVjRCLGdDQVVBUyxHQVZBLHVCQVVnQkMsUUFWaEI7QUFZaENwQix3QkFBQUEsVUFBVSxDQUFDVyxLQUFYLENBQWlCRCxHQUFqQixFQUFzQlcsTUFBdEIsRUFBOEIsVUFBVVQsR0FBVixFQUFlQyxNQUFmLEVBQXVCO0FBQ2pELDhCQUFJRCxHQUFKLEVBQVMsTUFBTUEsR0FBTjtBQUNaLHlCQUZEOztBQVpnQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQUF4Qzs7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUExRW1CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQWRWLGNBQWM7QUFBQTtBQUFBO0FBQUEsR0FBcEI7O0FBNkZBb0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVyQixFQUFBQSxjQUFjLEVBQWRBO0FBQUYsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvZGFsaWEvRGVza3RvcC9jb2RpL1Byb2plY3RCeU1lL0Nvbm5leC9Db25uZXgvYmFjay9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsibGV0IHsgY29ubmVjdGlvbiB9ID0gcmVxdWlyZShcIi4vY29uZmlnXCIpO1xuY29uc3QgYmNyeXB0ID0gcmVxdWlyZShcImJjcnlwdGpzXCIpO1xuXG5jb25zdCBjcmVhdGVEYXRhQmFzZSA9IGFzeW5jICgpID0+IHtcblxuICAgIC8vaGVyZSB3ZSB3aWxsIHdyaXRlIG91ciBxdWVyeS5cblxuXG4gICAgdmFyIHVzZXJzID0gYENSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHVzZXJzIChcbiAgICBpZCBJTlRFR0VSIFBSSU1BUlkgS0VZIEFVVE9fSU5DUkVNRU5ULFxuICAgIHJvbGUgSU5URUdFUiBOT1QgTlVMTCBERUZBVUxUIDAsXG4gICAgZmlyc3RuYW1lIFRFWFQsIFxuICAgIGxhc3RuYW1lIFRFWFQsXG4gICAgdXNlcm5hbWUgVEVYVCAsXG4gICAgcGhvbmVudW1iZXIgVEVYVCAsIFxuICAgIHBhc3N3b3JkIFRFWFQgTk9UIE5VTEwsXG4gICAgdG9rZW4gVEVYVFxuICAgIFxuICAgIClgO1xuXG5cbiAgICB2YXIgdHJpcCA9IGBDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyB0cmlwIChcbiAgICAgICAgaWQgSU5URUdFUiBQUklNQVJZIEtFWSBBVVRPX0lOQ1JFTUVOVCxcbiAgICAgICAgdHJpcGVfdGl0bGUgVEVYVCxcbiAgICAgICByb3V0ZSBURVhUIFxuICAgICAgICBcbiAgICAgICAgKWA7XG5cblxuXG5cbiAgICB2YXIgYnVzID0gYENSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGJ1cyAoXG4gICAgICAgIGlkIElOVEVHRVIgUFJJTUFSWSBLRVkgQVVUT19JTkNSRU1FTlQsXG4gICAgICAgIHRpbWUgVEVYVCBOT1QgTlVMTCAsXG4gICAgICAgIGRhdGUgIFRFWFQsXG4gICAgICAgIGxvbmdpdHVkZSBURVhULCBcbiAgICAgICAgbGFsdGl0dWRlIFRFWFQsXG4gICAgICAgIGVtcHR5X3BsYWNlIFRFWFQsXG4gICAgICAgIHRvdGFsX3BsYWNlIFRFWFQsXG4gICAgICAgIGlkX3RyaXAgSU5URUdFUiBOT1QgTlVMTCxcbiAgICAgICAgaWRfdXNlcnMgSU5URUdFUiBOT1QgTlVMTCxcbiAgICAgICAgRk9SRUlHTiBLRVkgKGlkX3RyaXApIFJFRkVSRU5DRVMgdHJpcChpZCksXG4gICAgICAgIEZPUkVJR04gS0VZIChpZF91c2VycykgUkVGRVJFTkNFUyB1c2VycyhpZClcbiAgICAgICAgICApYDtcblxuXG5cbiAgICB2YXIgcmVzZXJ2YXRpb24gPSBgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgcmVzZXJ2YXRpb24gKFxuICAgICAgICAgICAgICAgIGlkIElOVEVHRVIgUFJJTUFSWSBLRVkgQVVUT19JTkNSRU1FTlQsXG4gICAgICAgICAgICAgICAgZmlyc3RuYW1lIFRFWFQsXG4gICAgICAgICAgICAgICAgbGFzdG5hbWUgVEVYVCxcbiAgICAgICAgICAgICAgICBwaG9uZW51bWJlciBURVhULFxuICAgICAgICAgICAgICAgIHBpY2t1cF9hZGRyZXNzIFRFWFQsXG4gICAgICAgICAgICAgICAgaWRfYnVzIElOVEVHRVIgTk9UIE5VTEwsXG4gICAgICAgICAgICAgICAgaWRfdXNlcnMgSU5URUdFUiBOT1QgTlVMTCxcbiAgICAgICAgICAgICAgICBGT1JFSUdOIEtFWSAoaWRfYnVzKSBSRUZFUkVOQ0VTIGJ1cyhpZCksXG4gICAgICAgICAgICAgICAgRk9SRUlHTiBLRVkgKGlkX3VzZXJzKSBSRUZFUkVOQ0VTIHVzZXJzKGlkKVxuICAgICAgICAgICAgICAgICAgIClgO1xuXG4gICAgdmFyIG1zc2cgPSBgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgbXNzZyAoXG4gICAgICAgICAgICAgICAgICAgIGlkIElOVEVHRVIgUFJJTUFSWSBLRVkgQVVUT19JTkNSRU1FTlQsXG4gICAgICAgICAgICAgICAgICAgIG5hbWUgVEVYVCxcbiAgICAgICAgICAgICAgICAgICAgZW1haWwgVEVYVCxcbiAgICAgICAgICAgICAgICAgICAgcGhvbmVudW1iZXIgVEVYVCxcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZSBURVhUXG4gICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIClgO1xuXG4gICAgbGV0IGFyciA9IFt1c2VycywgdHJpcCwgYnVzLCByZXNlcnZhdGlvbiwgbXNzZ107XG5cbiAgICBhcnIubWFwKHNxbCA9PiB7XG4gICAgICAgIGNvbm5lY3Rpb24ucXVlcnkoc3FsLCBmdW5jdGlvbiAoZXJyLCByZXN1bHQpIHtcbiAgICAgICAgICAgIGlmIChlcnIpIHRocm93IGVycjtcbiAgICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBjb25uZWN0aW9uLnF1ZXJ5KGBTRUxFQ1QgKiBGUk9NIHVzZXJzYCwgYXN5bmMgZnVuY3Rpb24gKGVyciwgcmVzdWx0KSB7XG4gICAgICAgIGlmIChlcnIpIHRocm93IGVycjtcblxuICAgICAgICBpZiAoIXJlc3VsdC5sZW5ndGgpIHtcbiAgICAgICAgICAgIGxldCBzYWx0ID0gYXdhaXQgYmNyeXB0LmdlblNhbHQoMTApO1xuICAgICAgICAgICAgbGV0IGhhc2hlZFBhc3N3b3JkID0gYXdhaXQgYmNyeXB0Lmhhc2goJ2FkbWluJywgc2FsdCk7XG5cbiAgICAgICAgICAgIGxldCBhdHQgPSBcImZpcnN0bmFtZSwgbGFzdG5hbWUsIHVzZXJuYW1lLCBwaG9uZW51bWJlciwgcGFzc3dvcmQsIHJvbGVcIjtcbiAgICAgICAgICAgIGxldCBpblZhbHVlcyA9IFwiPywgPywgPywgPywgP1wiO1xuICAgICAgICAgICAgbGV0IHZhbHVlcyA9IFsnYWRtaW4nLCAnYWRtaW4nLCAnYWRtaW4nLCAnMDMwMDAwMDAnLCBoYXNoZWRQYXNzd29yZCwgMV07XG4gICAgICAgICAgICBsZXQgc3FsID0gYElOU0VSVCBJTlRPIHVzZXJzICgke2F0dH0pIFZBTFVFUyAoJHtpblZhbHVlc30pYDtcblxuICAgICAgICAgICAgY29ubmVjdGlvbi5xdWVyeShzcWwsIHZhbHVlcywgZnVuY3Rpb24gKGVyciwgcmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgaWYgKGVycikgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcblxufVxubW9kdWxlLmV4cG9ydHMgPSB7IGNyZWF0ZURhdGFCYXNlIH07Il19",
    "map": {
      "version": 3,
      "sources": [
        "createDataBase.js"
      ],
      "names": [
        "require",
        "connection",
        "bcrypt",
        "createDataBase",
        "users",
        "trip",
        "bus",
        "reservation",
        "mssg",
        "arr",
        "map",
        "sql",
        "query",
        "err",
        "result",
        "length",
        "genSalt",
        "salt",
        "hash",
        "hashedPassword",
        "att",
        "inValues",
        "values",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,eAAqBA,OAAO,CAAC,UAAD,CAA5B;AAAA,IAAMC,UAAN,YAAMA,UAAN;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAMG,cAAc;AAAA,qEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnB;AAGIC,YAAAA,KALe;AAkBfC,YAAAA,IAlBe;AA4BfC,YAAAA,GA5Be;AA4CfC,YAAAA,WA5Ce;AAwDfC,YAAAA,IAxDe;AAkEfC,YAAAA,GAlEe,GAkET,CAACL,KAAD,EAAQC,IAAR,EAAcC,GAAd,EAAmBC,WAAnB,EAAgCC,IAAhC,CAlES;AAoEnBC,YAAAA,GAAG,CAACC,GAAJ,CAAQ,UAAAC,GAAG,EAAI;AACXV,cAAAA,UAAU,CAACW,KAAX,CAAiBD,GAAjB,EAAsB,UAAUE,GAAV,EAAeC,MAAf,EAAuB;AACzC,oBAAID,GAAJ,EAAS,MAAMA,GAAN;AACZ,eAFD;AAGH,aAJD;AAMAZ,YAAAA,UAAU,CAACW,KAAX;AAAA,kFAAwC,iBAAgBC,GAAhB,EAAqBC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAChCD,GADgC;AAAA;AAAA;AAAA;;AAAA,8BACrBA,GADqB;;AAAA;AAAA,4BAG/BC,MAAM,CAACC,MAHwB;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAIfb,MAAM,CAACc,OAAP,CAAe,EAAf,CAJe;;AAAA;AAI5BC,wBAAAA,IAJ4B;AAAA;AAAA,+BAKLf,MAAM,CAACgB,IAAP,CAAY,OAAZ,EAAqBD,IAArB,CALK;;AAAA;AAK5BE,wBAAAA,cAL4B;AAO5BC,wBAAAA,GAP4B,GAOtB,4DAPsB;AAQ5BC,wBAAAA,QAR4B,GAQjB,eARiB;AAS5BC,wBAAAA,MAT4B,GASnB,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,UAA5B,EAAwCH,cAAxC,EAAwD,CAAxD,CATmB;AAU5BR,wBAAAA,GAV4B,gCAUAS,GAVA,uBAUgBC,QAVhB;AAYhCpB,wBAAAA,UAAU,CAACW,KAAX,CAAiBD,GAAjB,EAAsBW,MAAtB,EAA8B,UAAUT,GAAV,EAAeC,MAAf,EAAuB;AACjD,8BAAID,GAAJ,EAAS,MAAMA,GAAN;AACZ,yBAFD;;AAZgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAxC;;AAAA;AAAA;AAAA;AAAA;;AA1EmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdV,cAAc;AAAA;AAAA;AAAA,GAApB;;AA6FAoB,MAAM,CAACC,OAAP,GAAiB;AAAErB,EAAAA,cAAc,EAAdA;AAAF,CAAjB",
      "sourceRoot": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/",
      "sourcesContent": [
        "let { connection } = require(\"./config\");\nconst bcrypt = require(\"bcryptjs\");\n\nconst createDataBase = async () => {\n\n    //here we will write our query.\n\n\n    var users = `CREATE TABLE IF NOT EXISTS users (\n    id INTEGER PRIMARY KEY AUTO_INCREMENT,\n    role INTEGER NOT NULL DEFAULT 0,\n    firstname TEXT, \n    lastname TEXT,\n    username TEXT ,\n    phonenumber TEXT , \n    password TEXT NOT NULL,\n    token TEXT\n    \n    )`;\n\n\n    var trip = `CREATE TABLE IF NOT EXISTS trip (\n        id INTEGER PRIMARY KEY AUTO_INCREMENT,\n        tripe_title TEXT,\n       route TEXT \n        \n        )`;\n\n\n\n\n    var bus = `CREATE TABLE IF NOT EXISTS bus (\n        id INTEGER PRIMARY KEY AUTO_INCREMENT,\n        time TEXT NOT NULL ,\n        date  TEXT,\n        longitude TEXT, \n        laltitude TEXT,\n        empty_place TEXT,\n        total_place TEXT,\n        id_trip INTEGER NOT NULL,\n        id_users INTEGER NOT NULL,\n        FOREIGN KEY (id_trip) REFERENCES trip(id),\n        FOREIGN KEY (id_users) REFERENCES users(id)\n          )`;\n\n\n\n    var reservation = `CREATE TABLE IF NOT EXISTS reservation (\n                id INTEGER PRIMARY KEY AUTO_INCREMENT,\n                firstname TEXT,\n                lastname TEXT,\n                phonenumber TEXT,\n                pickup_address TEXT,\n                id_bus INTEGER NOT NULL,\n                id_users INTEGER NOT NULL,\n                FOREIGN KEY (id_bus) REFERENCES bus(id),\n                FOREIGN KEY (id_users) REFERENCES users(id)\n                   )`;\n\n    var mssg = `CREATE TABLE IF NOT EXISTS mssg (\n                    id INTEGER PRIMARY KEY AUTO_INCREMENT,\n                    name TEXT,\n                    email TEXT,\n                    phonenumber TEXT,\n                    message TEXT\n                   \n                 \n                )`;\n\n    let arr = [users, trip, bus, reservation, mssg];\n\n    arr.map(sql => {\n        connection.query(sql, function (err, result) {\n            if (err) throw err;\n        });\n    });\n\n    connection.query(`SELECT * FROM users`, async function (err, result) {\n        if (err) throw err;\n\n        if (!result.length) {\n            let salt = await bcrypt.genSalt(10);\n            let hashedPassword = await bcrypt.hash('admin', salt);\n\n            let att = \"firstname, lastname, username, phonenumber, password, role\";\n            let inValues = \"?, ?, ?, ?, ?\";\n            let values = ['admin', 'admin', 'admin', '03000000', hashedPassword, 1];\n            let sql = `INSERT INTO users (${att}) VALUES (${inValues})`;\n\n            connection.query(sql, values, function (err, result) {\n                if (err) throw err;\n            });\n        }\n    });\n\n}\nmodule.exports = { createDataBase };"
      ]
    },
    "sourceType": "script",
    "mtime": 1632826898893
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back\",\"filename\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/config.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back",
      "filename": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/config.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/config.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/",
        "sourceFileName": "config.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mysql = require('mysql');\n\nvar connection = mysql.createConnection({\n  host: \"localhost\",\n  user: \"dd\",\n  password: \"dalia123\",\n  database: \"connex\"\n});\nconnection.connect(function (err) {\n  if (err) throw err;\n  console.log(\"Connected!\");\n});\nmodule.exports = {\n  connection: connection\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJteXNxbCIsInJlcXVpcmUiLCJjb25uZWN0aW9uIiwiY3JlYXRlQ29ubmVjdGlvbiIsImhvc3QiLCJ1c2VyIiwicGFzc3dvcmQiLCJkYXRhYmFzZSIsImNvbm5lY3QiLCJlcnIiLCJjb25zb2xlIiwibG9nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQW5COztBQUVBLElBQUlDLFVBQVUsR0FBR0YsS0FBSyxDQUFDRyxnQkFBTixDQUF1QjtBQUNwQ0MsRUFBQUEsSUFBSSxFQUFFLFdBRDhCO0FBRXBDQyxFQUFBQSxJQUFJLEVBQUUsSUFGOEI7QUFHcENDLEVBQUFBLFFBQVEsRUFBRSxVQUgwQjtBQUlwQ0MsRUFBQUEsUUFBUSxFQUFFO0FBSjBCLENBQXZCLENBQWpCO0FBUUFMLFVBQVUsQ0FBQ00sT0FBWCxDQUFtQixVQUFVQyxHQUFWLEVBQWU7QUFDOUIsTUFBSUEsR0FBSixFQUFTLE1BQU1BLEdBQU47QUFDVEMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksWUFBWjtBQUNILENBSEQ7QUFLQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVYLEVBQUFBLFVBQVUsRUFBVkE7QUFBRixDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9kYWxpYS9EZXNrdG9wL2NvZGkvUHJvamVjdEJ5TWUvQ29ubmV4L0Nvbm5leC9iYWNrL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbXlzcWwgPSByZXF1aXJlKCdteXNxbCcpO1xuXG5sZXQgY29ubmVjdGlvbiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xuICAgIGhvc3Q6IFwibG9jYWxob3N0XCIsXG4gICAgdXNlcjogXCJkZFwiLFxuICAgIHBhc3N3b3JkOiBcImRhbGlhMTIzXCIsXG4gICAgZGF0YWJhc2U6IFwiY29ubmV4XCJcbn0pO1xuXG5cbmNvbm5lY3Rpb24uY29ubmVjdChmdW5jdGlvbiAoZXJyKSB7XG4gICAgaWYgKGVycikgdGhyb3cgZXJyO1xuICAgIGNvbnNvbGUubG9nKFwiQ29ubmVjdGVkIVwiKVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0geyBjb25uZWN0aW9uIH0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "mysql",
        "require",
        "connection",
        "createConnection",
        "host",
        "user",
        "password",
        "database",
        "connect",
        "err",
        "console",
        "log",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAEA,IAAIC,UAAU,GAAGF,KAAK,CAACG,gBAAN,CAAuB;AACpCC,EAAAA,IAAI,EAAE,WAD8B;AAEpCC,EAAAA,IAAI,EAAE,IAF8B;AAGpCC,EAAAA,QAAQ,EAAE,UAH0B;AAIpCC,EAAAA,QAAQ,EAAE;AAJ0B,CAAvB,CAAjB;AAQAL,UAAU,CAACM,OAAX,CAAmB,UAAUC,GAAV,EAAe;AAC9B,MAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,CAHD;AAKAC,MAAM,CAACC,OAAP,GAAiB;AAAEX,EAAAA,UAAU,EAAVA;AAAF,CAAjB",
      "sourceRoot": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/",
      "sourcesContent": [
        "var mysql = require('mysql');\n\nlet connection = mysql.createConnection({\n    host: \"localhost\",\n    user: \"dd\",\n    password: \"dalia123\",\n    database: \"connex\"\n});\n\n\nconnection.connect(function (err) {\n    if (err) throw err;\n    console.log(\"Connected!\")\n});\n\nmodule.exports = { connection }"
      ]
    },
    "sourceType": "script",
    "mtime": 1632131405362
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/auth/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back\",\"filename\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/auth/controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/auth/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back",
      "filename": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/auth/controller.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/auth/controller.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/auth/controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/auth/",
        "sourceFileName": "controller.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _app = _interopRequireDefault(require(\"../app\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar bcrypt = require(\"bcryptjs\"); //npm install bcryptjs --save\n\n\nvar jwt = require(\"jsonwebtoken\");\n\nvar _require = require('../config'),\n    connection = _require.connection;\n\nvar auth = function auth() {\n  var isLoggedIn = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {\n      var token, decoded, id, statement;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              token = req.body.token;\n              if (!token) next(new Error(\"Auth Error\"));\n\n              try {\n                decoded = jwt.verify(token, \"randomString\");\n                id = req.body.id;\n                if (id != decoded.id) next(new Error(\"Invalid Token1\"));\n                statement = \"SELECT id,username,token FROM users WHERE token=\\\"\".concat(token, \"\\\"\");\n                connection.query(statement, function (err, result) {\n                  if (!result || !result[0].id || result[0].id != id) next(new Error(\"Invalid Token2\"));\n                  req.id = decoded.id;\n                  req.result = result;\n                  next();\n                });\n              } catch (e) {\n                next(new Error(\"Invalid Token3\" + e.message));\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function isLoggedIn(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var signupAction = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              // check body data\n              _app[\"default\"].post('/signup', /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res, nex) {\n                  var _req$body, firstname, lastname, username, phonenumber, password, selectStmt;\n\n                  return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _req$body = req.body, firstname = _req$body.firstname, lastname = _req$body.lastname, username = _req$body.username, phonenumber = _req$body.phonenumber, password = _req$body.password;\n\n                          if (!(!username || !password)) {\n                            _context3.next = 3;\n                            break;\n                          }\n\n                          throw new Error(\"username and password are required\");\n\n                        case 3:\n                          _context3.prev = 3;\n                          selectStmt = \"SELECT id, username, password FROM users WHERE username = \\\"\".concat(username, \"\\\"\"); //   let salt = await bcrypt.genSalt(10);\n\n                          connection.query(selectStmt, /*#__PURE__*/function () {\n                            var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(err, result) {\n                              var salt, hashedPassword, insertStmt;\n                              return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                                while (1) {\n                                  switch (_context2.prev = _context2.next) {\n                                    case 0:\n                                      if (!(result.length >= 1)) {\n                                        _context2.next = 2;\n                                        break;\n                                      }\n\n                                      throw new Error(\"User already exists\");\n\n                                    case 2:\n                                      _context2.next = 4;\n                                      return bcrypt.genSalt(10);\n\n                                    case 4:\n                                      salt = _context2.sent;\n                                      _context2.next = 7;\n                                      return bcrypt.hash(password, salt);\n\n                                    case 7:\n                                      hashedPassword = _context2.sent;\n                                      insertStmt = 'INSERT INTO users (firstname, lastname, username, phonenumber, password ) VALUES (?,?,?, ?, ?)';\n                                      connection.query(insertStmt, [firstname, lastname, username, phonenumber, hashedPassword], function (err, result) {\n                                        var id = result && result.insertId;\n                                        var payload = {\n                                          id: id\n                                        };\n                                        var token = jwt.sign(payload, \"randomString\", {\n                                          expiresIn: 10000\n                                        });\n                                        var obj = {\n                                          'token': token\n                                        };\n                                        var query = 'update users SET ? where id=?';\n                                        connection.query(query, [obj, id], function (err, result) {\n                                          res.send({\n                                            id: id,\n                                            token: token\n                                          });\n                                        });\n                                      });\n\n                                    case 10:\n                                    case \"end\":\n                                      return _context2.stop();\n                                  }\n                                }\n                              }, _callee2);\n                            }));\n\n                            return function (_x7, _x8) {\n                              return _ref4.apply(this, arguments);\n                            };\n                          }());\n                          _context3.next = 11;\n                          break;\n\n                        case 8:\n                          _context3.prev = 8;\n                          _context3.t0 = _context3[\"catch\"](3);\n                          throw new Error(\"couldn't create user \" + _context3.t0.message);\n\n                        case 11:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3, null, [[3, 8]]);\n                }));\n\n                return function (_x4, _x5, _x6) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function signupAction() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // let id =result && result.id;\n  // let id = result ? result.id : 2;\n\n\n  var loginAction = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _app[\"default\"].post('/login', /*#__PURE__*/function () {\n                var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n                  var _req$body2, username, password, statement;\n\n                  return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          _req$body2 = req.body, username = _req$body2.username, password = _req$body2.password;\n\n                          if (!(!username || !password)) {\n                            _context6.next = 3;\n                            break;\n                          }\n\n                          throw new Error(\"username and password are required\");\n\n                        case 3:\n                          _context6.prev = 3;\n                          statement = \"SELECT id, username, password FROM users WHERE username = \\\"\".concat(username, \"\\\"\");\n                          connection.query(statement, /*#__PURE__*/function () {\n                            var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(err, result1) {\n                              var isMatch, payload, token, obj, query;\n                              return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                                while (1) {\n                                  switch (_context5.prev = _context5.next) {\n                                    case 0:\n                                      if (result1.length === 0) console.log(\"User not found\"); // check the password\n\n                                      _context5.next = 3;\n                                      return bcrypt.compare(password, result1[0].password);\n\n                                    case 3:\n                                      isMatch = _context5.sent;\n\n                                      if (isMatch) {\n                                        _context5.next = 6;\n                                        break;\n                                      }\n\n                                      throw new Error(\"Incorrect Password !\");\n\n                                    case 6:\n                                      // generate token\n                                      payload = {\n                                        id: result1[0].id\n                                      };\n                                      token = jwt.sign(payload, \"randomString\", {\n                                        expiresIn: 10000\n                                      }); // add token to the user\n\n                                      obj = {\n                                        'token': token\n                                      };\n                                      query = 'update users SET ? where id=?';\n                                      connection.query(query, [obj, result1[0].id], function (err, result) {\n                                        res.send({\n                                          id: result1[0].id,\n                                          token: token\n                                        });\n                                      });\n\n                                    case 11:\n                                    case \"end\":\n                                      return _context5.stop();\n                                  }\n                                }\n                              }, _callee5);\n                            }));\n\n                            return function (_x11, _x12) {\n                              return _ref7.apply(this, arguments);\n                            };\n                          }());\n                          _context6.next = 11;\n                          break;\n\n                        case 8:\n                          _context6.prev = 8;\n                          _context6.t0 = _context6[\"catch\"](3);\n                          throw new Error(\"couldn't login user \" + _context6.t0.message);\n\n                        case 11:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6, null, [[3, 8]]);\n                }));\n\n                return function (_x9, _x10) {\n                  return _ref6.apply(this, arguments);\n                };\n              }());\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function loginAction() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var logoutAction = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _app[\"default\"].post('/logout', isLoggedIn, function (req, res) {\n                try {\n                  var query = 'UPDATE users SET token = ? WHERE id = ?';\n                  var obj = {\n                    'token': null\n                  };\n                  var id = req.id;\n                  connection.query(query, [obj, id], function (err, result) {\n                    res.send(\"logged out successfully\");\n                  });\n                } catch (e) {\n                  throw new Error(\"couldn't logout user \" + e.message);\n                }\n              });\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function logoutAction() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  signupAction();\n  loginAction();\n  logoutAction();\n};\n\nmodule.exports = {\n  auth: auth\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "controller.js"
      ],
      "names": [
        "bcrypt",
        "require",
        "jwt",
        "connection",
        "auth",
        "isLoggedIn",
        "req",
        "res",
        "next",
        "token",
        "body",
        "Error",
        "decoded",
        "verify",
        "id",
        "statement",
        "query",
        "err",
        "result",
        "e",
        "message",
        "signupAction",
        "app",
        "post",
        "nex",
        "firstname",
        "lastname",
        "username",
        "phonenumber",
        "password",
        "selectStmt",
        "length",
        "genSalt",
        "salt",
        "hash",
        "hashedPassword",
        "insertStmt",
        "insertId",
        "payload",
        "sign",
        "expiresIn",
        "obj",
        "send",
        "loginAction",
        "result1",
        "console",
        "log",
        "compare",
        "isMatch",
        "logoutAction",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/dalia/Desktop/codi/ProjectByMe/Connex/Connex/back/src/auth/",
      "sourcesContent": [
        "const bcrypt = require(\"bcryptjs\"); //npm install bcryptjs --save\nconst jwt = require(\"jsonwebtoken\");\nconst { connection } = require('../config');\nimport app from '../app';\n\nlet auth = () => {\n\n    const isLoggedIn = async (req, res, next) => {\n        const token = req.body.token;\n        if (!token) next(new Error(\"Auth Error\"));\n\n        try {\n\n            const decoded = jwt.verify(token, \"randomString\");\n            const id = req.body.id;\n            if (id != decoded.id) next(new Error(\"Invalid Token1\"));\n\n            const statement = `SELECT id,username,token FROM users WHERE token=\"${token}\"`;\n            connection.query(statement, (err, result) => {\n                if (!result || !result[0].id || result[0].id != id) next(new Error(\"Invalid Token2\"));\n\n                req.id = decoded.id;\n                req.result = result;\n\n\n                next();\n            })\n\n        } catch (e) {\n            next(new Error(\"Invalid Token3\" + e.message));\n        }\n\n    }\n\n\n\n    const signupAction = async () => {\n        // check body data\n        app.post('/signup', async (req, res, nex) => {\n            const { firstname, lastname, username, phonenumber, password } = req.body;\n\n            \n            if (!username || !password) throw new Error(\"username and password are required\");\n            try {\n                let selectStmt = `SELECT id, username, password FROM users WHERE username = \"${username}\"`;\n                //   let salt = await bcrypt.genSalt(10);\n                connection.query(selectStmt, async (err, result) => {\n                    if (result.length >= 1) throw new Error(\"User already exists\");\n                    let salt = await bcrypt.genSalt(10);\n                    let hashedPassword = await bcrypt.hash(password, salt);\n                    let insertStmt = 'INSERT INTO users (firstname, lastname, username, phonenumber, password ) VALUES (?,?,?, ?, ?)';\n\n                    connection.query(insertStmt, [firstname, lastname, username, phonenumber, hashedPassword], (err, result) => {\n                        let id = result && result.insertId;\n\n                        let payload = { id: id };\n                        let token = jwt.sign(payload, \"randomString\", { expiresIn: 10000 });\n\n\n                        let obj = {\n                            'token': token\n                        }\n                        let query = 'update users SET ? where id=?';\n                        connection.query(query, [obj, id], (err, result) => {\n                            res.send({ id: id, token: token })\n\n                        })\n                    });\n\n                });\n            } catch (e) {\n                throw new Error(`couldn't create user ` + e.message);\n            }\n        })\n    }\n\n    // let id =result && result.id;\n    // let id = result ? result.id : 2;\n\n\n    const loginAction = async () => {\n        app.post('/login', async (req, res) => {\n            let { username, password } = req.body;\n            if (!username || !password) throw new Error(\"username and password are required\");\n            try {\n                let statement = `SELECT id, username, password FROM users WHERE username = \"${username}\"`;\n                connection.query(statement, async (err, result1) => {\n\n                    if (result1.length === 0) console.log(\"User not found\");\n                    // check the password\n                    let isMatch = await bcrypt.compare(password, result1[0].password);\n                    if (!isMatch) throw new Error(\"Incorrect Password !\");\n                    // generate token\n                    let payload = { id: result1[0].id };\n\n                    let token = jwt.sign(payload, \"randomString\", { expiresIn: 10000 });\n                    // add token to the user\n                    let obj = {\n                        'token': token\n                    }\n                    let query = 'update users SET ? where id=?';\n                    connection.query(query, [obj, result1[0].id], (err, result) => {\n\n                        res.send({ id: result1[0].id, token });\n                    })\n                })\n            } catch (e) {\n                throw new Error(`couldn't login user ` + e.message);\n\n            }\n        })\n    }\n\n    const logoutAction = async () => {\n        app.post('/logout', isLoggedIn, (req, res) => {\n            try {\n                let query = 'UPDATE users SET token = ? WHERE id = ?';\n                let obj = {\n                    'token': null\n                }\n                let id = req.id\n\n                connection.query(query, [obj, id], (err, result) => {\n                    res.send(\"logged out successfully\");\n                })\n            } catch (e) {\n                throw new Error(`couldn't logout user ` + e.message);\n            }\n        })\n    }\n\n    signupAction();\n    loginAction();\n    logoutAction();\n}\nmodule.exports = { auth }"
      ]
    },
    "sourceType": "script",
    "mtime": 1632822087456
  }
}